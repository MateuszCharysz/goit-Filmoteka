{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_object_spread.js","src/js/api/fetchMovieGenres.js","src/js/api/fetchMovies.js","src/js/searchMovies.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const fetchMovieGenres = id => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error('Error: Failed to fetch data from API. Status code:', response.status);\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .then(data => {\n      return data.genres;\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(new Error('An error occurred while fetching the data.'));\n    });\n};\n\nexport { fetchMovieGenres };\n","import { fetchMovieGenres } from './fetchMovieGenres';\n\nconst fetchMovies = name => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error('Error: Failed to fetch data from API. Status code:', response.status);\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .then(data => {\n      const movieIds = data.results.map(movie => movie.id);\n      const promises = movieIds.map(id => fetchMovieGenres(id));\n      return Promise.all(promises).then(genres => {\n        return data.results.map((movie, index) => ({\n          ...movie,\n          genres: genres[index],\n        }));\n      });\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(new Error('An error occurred while fetching the data.'));\n    });\n};\nexport { fetchMovies };\n","import { fetchMovies } from './api/fetchMovies';\nconst searchMovies = () => {\n  const searchInput = document.getElementById('search');\n  const searchValue = searchInput.value.trim();\n\n  fetchMovies(searchValue)\n    .then(movies => {\n      const markup = renderList(movies);\n      document.getElementById('main').innerHTML = markup;\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      // Tutaj możesz wyświetlić informację o błędzie w interfejsie użytkownika\n    });\n};\n\nconst button = document.getElementById('button');\nbutton.addEventListener('click', searchMovies);\n\nconst renderList = movies => {\n  const markup = movies\n    .map(movie => {\n      const tags = movie.genres.map(genre => genre.name).join(', ');\n      return (\n        `<div class=\"movie-card\">\n          <img\n            src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\"\n            alt=\"${tags}\"\n            loading=\"lazy\"\n          />\n          <div class=\"info\">\n            <p class=\"movie__title\">${movie.original_title}</p> <p class=\"movie__genres\">${tags}</p>\n          </div>\n        </div>`\n      );\n    })\n    .join('');\n\n  return markup;\n};\n\nexport { searchMovies };\n"],"names":["Object","defineProperty","module","exports","value","default","obj","key","enumerable","configurable","writable","$9eddae5a012cde57$exports","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$9eddae5a012cde57$var$_defineProperty","parcelRequire","__esModule","$d93a599c3cbe9b01$export$8bebce24411c8fc2","id","API_URL","fetch","then","response","ok","json","status","console","error","Promise","reject","Error","data","genres","catch","$f77f598278a76b9f$export$88181abcadffafee","name","promises","results","map","movie","all","index","$parcel$interopDefault","$e1a441075edf8b92$export$b0c4d3ac9887d994","searchValue","document","getElementById","trim","movies","markup","$e1a441075edf8b92$var$renderList","innerHTML","addEventListener","tags","genre","join","poster_path","original_title"],"version":3,"file":"index.a2add569.js.map"}