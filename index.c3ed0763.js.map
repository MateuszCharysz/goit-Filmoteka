{"mappings":"AAAA,MAAMA,EAAmBC,GAIhBC,MAFS,sCAAsCD,6DAGnDE,MAAKC,GACCA,EAASC,GASPD,EAASE,QARU,MAApBF,EAASG,OAEXC,QAAQC,MAAM,oCAEdD,QAAQC,MAAM,qDAAsDL,EAASG,QAExEG,QAAQC,OAAO,IAAIC,MAAMR,EAASG,YAI5CJ,MAAKU,GACGA,EAAKC,SAEbC,OAAMN,IACLD,QAAQC,MAAMA,GACPC,QAAQC,OAAO,IAAIC,MAAM,kDCpBhCI,EAAcC,GAIXf,MAFS,4FAAsEe,KAGnFd,MAAKC,GACCA,EAASC,GASPD,EAASE,QARU,MAApBF,EAASG,OAEXC,QAAQC,MAAM,oCAEdD,QAAQC,MAAM,qDAAsDL,EAASG,QAExEG,QAAQC,OAAO,IAAIC,MAAMR,EAASG,YAI5CJ,MAAKU,IACJ,MACMK,EADWL,EAAKM,QAAQC,KAAIC,GAASA,EAAMpB,KACvBmB,KAAInB,GAAMD,EAAiBC,KACrD,OAAOS,QAAQY,IAAIJ,GAAUf,MAAKW,GACzBD,EAAKM,QAAQC,KAAI,CAACC,EAAOE,KAAW,IACtCF,EACHP,OAAQA,EAAOS,QAEjB,IAEHR,OAAMN,IACLD,QAAQC,MAAMA,GACPC,QAAQC,OAAO,IAAIC,MAAM,kDC9BhCY,EAAe,KACnB,MACMC,EADcC,SAASC,eAAe,UACZC,MAAMC,OAEtCb,EAAYS,GACTtB,MAAK2B,IACJ,MAAMC,EAASC,EAAWF,GAC1BJ,SAASC,eAAe,QAAQM,UAAYF,CAAM,IAEnDhB,OAAMN,IACLD,QAAQC,MAAM,SAAUA,EAAM,GAE9B,EAGSiB,SAASC,eAAe,UAChCO,iBAAiB,QAASV,GAEjC,MAAMQ,EAAaF,GACFA,EACZV,KAAIC,IACH,MAAMc,EAAOd,EAAMP,OAAOM,KAAIgB,GAASA,EAAMnB,OAAMoB,KAAK,MACxD,MACE,8FAE2ChB,EAAMiB,kCACtCH,mHAImBd,EAAMkB,+CAA+CJ,yCAE5E,IAGVE,KAAK","sources":["src/js/api/fetchMovieGenres.js","src/js/api/fetchMovies.js","src/js/searchMovies.js"],"sourcesContent":["const fetchMovieGenres = id => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error('Error: Failed to fetch data from API. Status code:', response.status);\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .then(data => {\n      return data.genres;\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(new Error('An error occurred while fetching the data.'));\n    });\n};\n\nexport { fetchMovieGenres };\n","import { fetchMovieGenres } from './fetchMovieGenres';\n\nconst fetchMovies = name => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error('Error: Failed to fetch data from API. Status code:', response.status);\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .then(data => {\n      const movieIds = data.results.map(movie => movie.id);\n      const promises = movieIds.map(id => fetchMovieGenres(id));\n      return Promise.all(promises).then(genres => {\n        return data.results.map((movie, index) => ({\n          ...movie,\n          genres: genres[index],\n        }));\n      });\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(new Error('An error occurred while fetching the data.'));\n    });\n};\nexport { fetchMovies };\n","import { fetchMovies } from './api/fetchMovies';\nconst searchMovies = () => {\n  const searchInput = document.getElementById('search');\n  const searchValue = searchInput.value.trim();\n\n  fetchMovies(searchValue)\n    .then(movies => {\n      const markup = renderList(movies);\n      document.getElementById('main').innerHTML = markup;\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      // Tutaj możesz wyświetlić informację o błędzie w interfejsie użytkownika\n    });\n};\n\nconst button = document.getElementById('button');\nbutton.addEventListener('click', searchMovies);\n\nconst renderList = movies => {\n  const markup = movies\n    .map(movie => {\n      const tags = movie.genres.map(genre => genre.name).join(', ');\n      return (\n        `<div class=\"movie-card\">\n          <img\n            src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\"\n            alt=\"${tags}\"\n            loading=\"lazy\"\n          />\n          <div class=\"info\">\n            <p class=\"movie__title\">${movie.original_title}</p> <p class=\"movie__genres\">${tags}</p>\n          </div>\n        </div>`\n      );\n    })\n    .join('');\n\n  return markup;\n};\n\nexport { searchMovies };\n"],"names":["$44313975d9150039$export$8bebce24411c8fc2","id","fetch","then","response","ok","json","status","console","error","Promise","reject","Error","data","genres","catch","$c2cee0d19eea503f$export$88181abcadffafee","name","promises","results","map","movie","all","index","$4a9ea052b238628e$export$b0c4d3ac9887d994","searchValue","document","getElementById","value","trim","movies","markup","$4a9ea052b238628e$var$renderList","innerHTML","addEventListener","tags","genre","join","poster_path","original_title"],"version":3,"file":"index.c3ed0763.js.map"}