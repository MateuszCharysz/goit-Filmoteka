{"mappings":"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","sources":["src/js/modal/openModal.js","src/js/api/fetchMovieById.js","src/js/gallery/galleryVariables.js","src/js/localStorage/localStorageMod.js","src/js/localStorage/jsLocalStorage.js","src/js/localStorage/movieCard.js","src/js/modal/closeModal.js","src/js/modal/modalMarkup.js","src/js/gallery/fetchingMovieDetails.js","src/js/api/apiUtils.js","src/js/gallery/galleryMarkup.js"],"sourcesContent":["import { fetchMovieById } from '../api/fetchMovieById';\nimport { movieBox, movieID } from '../gallery/galleryVariables';\nimport localStorageMod from '../localStorage/localStorageMod';\nimport { movieCard } from '../localStorage/movieCard';\nimport { closeModal } from './closeModal';\nimport { renderModal } from './modalMarkup';\n\nlet isModalOpen = false;\nlet currentScrollY = 0;\n\n// funkcja otwierająca modal\nconst openModal = e => {\n  isModalOpen = true;\n  currentScrollY = window.scrollY;\n  // przerywa funkcję, jeśli zdarzenie nie występuje na elemencie z klasą \"movie-card\".\n  if (!e.target.closest('.movie__card')) {\n    return;\n  }\n  localStorageMod.createLocalStorage();\n  const backdrop = document.createElement('div');\n  backdrop.classList.add('backdrop');\n\n  // pobranie id filmu z atrybutu \"data-id\" klikniętego elementu\n  const movieId = e.target.closest('.movie__card').getAttribute('data-id');\n\n  // sprawdzenie, czy film jest zapisany w localStorage\n  const isWatched = localStorageMod.findMovieId(movieId, 'watched');\n  const isQueued = localStorageMod.findMovieId(movieId, 'queued');\n\n  fetchMovieById(movieId)\n    .then(movieData => {\n      backdrop.innerHTML = renderModal(movieData);\n\n      // dodanie elementu backdrop do ciała dokumentu\n      document.body.appendChild(backdrop);\n\n      // blokowanie scrollowania strony\n      handleBodyScrolling(true, currentScrollY);\n\n      const closeModalButton = document.querySelector('#modal__close');\n      const watchedButton = document.getElementById('watched');\n      const queueButton = document.getElementById('queue');\n\n      toLocalButton(watchedButton, movieId, 'watched', isWatched);\n      toLocalButton(queueButton, movieId, 'queued', isQueued);\n\n      closeModalButton.addEventListener('click', () => {\n        // usuwanie nasłuchiwaczy zdarzeń\n        watchedButton.removeEventListener('click', () => null);\n        queueButton.removeEventListener('click', null);\n        // odblokowanie scrollowania strony\n        handleBodyScrolling(false, currentScrollY);\n        closeModal();\n      });\n    })\n    .catch(error => {\n      throw new Error(error);\n    });\n  addEventListener('keydown', clickEscape);\n};\n\nconst toLocalButton = (button, id, arrayType, isSaved) => {\n  // sprawdź, czy jesteś na stronie biblioteki\n  const isLibraryPage = document.body.classList.contains('library-page');\n  // sprawdź, czy jesteś na stronie 'watched' lub 'queue'\n  const isWatchedPage = document.body.classList.contains('watched-page');\n  const isQueuePage = document.body.classList.contains('queue-page');\n\n  button.classList.toggle('is-save', isSaved);\n  button.addEventListener('click', () => {\n    if (localStorageMod.findMovieId(id, arrayType)) {\n      localStorageMod.removeMovieId(id, arrayType);\n      button.classList.remove('is-save');\n      const movieCardFromHTML = document.querySelector(`[data-id=\"${id}\"]`);\n      if (movieCardFromHTML) {\n        const index = movieID.indexOf(id);\n        if (index > -1) {\n          movieID.splice(index, 1);\n        }\n        if (\n          (isWatchedPage && arrayType === 'watched') ||\n          (isQueuePage && arrayType === 'queued') ||\n          (!isLibraryPage && button.id === arrayType)\n        ) {\n          movieCardFromHTML.remove();\n        }\n      }\n    } else {\n      localStorageMod.saveMovieId(id, arrayType);\n      button.classList.add('is-save');\n      if (\n        (isWatchedPage && arrayType === 'watched') ||\n        (isQueuePage && arrayType === 'queued') ||\n        (!isLibraryPage && button.id === arrayType)\n      ) {\n        movieID.push(id);\n        fetchMovieById(id).then(data => {\n          if (isLibraryPage) {\n            movieBox.insertAdjacentHTML('beforeend', movieCard(data));\n          } else {\n            const watchedBox = document.querySelector('.watched-movies');\n            const queueBox = document.querySelector('.queued-movies');\n            if (isWatchedPage) {\n              watchedBox.insertAdjacentHTML('beforeend', movieCard(data));\n            } else if (isQueuePage) {\n              queueBox.insertAdjacentHTML('beforeend', movieCard(data));\n            }\n          }\n        });\n      }\n    }\n  });\n};\nconst handleBodyScrolling = (isModalOpen, currentScrollY) => {\n  if (isModalOpen) {\n    document.body.style.top = `-${currentScrollY}px`;\n    document.body.style.position = 'fixed';\n  } else {\n    document.body.style.position = '';\n    document.body.style.top = '';\n    console.log(currentScrollY);\n    window.scrollTo(0, currentScrollY);\n  }\n};\n\nconst clickEscape = event => {\n  if (isModalOpen) {\n    if (event.keyCode === 27) {\n      closeModal();\n      isModalOpen = false;\n      handleBodyScrolling(false, currentScrollY);\n    }\n  }\n};\n\nexport { openModal };\n","const fetchMovieById = id => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error(\n            'Error: Failed to fetch data from API. Status code:',\n            response.status\n          );\n        }\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      throw new Error(error)\n    });\n};\nexport { fetchMovieById };\n","export const movieBox = document.querySelector('.box');\nexport const loader = document.querySelector('.loader');\nexport let movieID = [];\nexport let movieDetails = [];\nexport const cbClear = () => {\n  movieID.length = 0;\n  movieDetails.length = 0;\n  movieBox.innerHTML = '';\n};\n","import jsLocalStorage from './jsLocalStorage';\n// const jsLocalStorage = { save, load, remove }; - funkcje zawierają już try...catch stryngifikacje i parsyfikacje z json\n// js.localStorage.save(key, value) // zapisuje w local storage pod kluczek key wartość value\n// js.localStorage.load(key) // zwraca value+\n// js.localValue.remove(key) // usuwa cały KEY łącznie z wartością\n\n//schemat funkcji\n//1. wpierw ładujemy z local storage dane do jakiejś wewnętrznej zmiennej edytowalnej (let)\n//2. robimy operacje na danych (mutujące array)\n//3. zapisujemy otrzymany array w local storage\n\nconst cbfindId = (movieId, arrayType) => arrayType.includes(movieId); // funkcja cb - do sprawdzania id wewnątrz funkcji\n\n// funkcja wywoływana przy uruchomieniu strony tworząca puste katalogi id\nconst createLocalStorage = (arr1 = 'watched', arr2 = 'queued') => {\n  if (localStorage.getItem(arr1) === null) jsLocalStorage.save(arr1, []);\n  if (localStorage.getItem(arr2) === null) jsLocalStorage.save(arr2, []);\n}; // ma do zrobienia stworzenie key=watched,queued // watched=[], queued=[] (format danych to array)\n// musi też sprawdzić czy zmienne stnieją, żeby ich nie nadpisać\n\n//argument arrayType - key który ma być użyty przy ładowaniu zasobu z local storage\n\n// funkcja wywoływana przy klikaniu na przyciski w modal (watched albo queued)\nconst saveMovieId = (movieId, arrayType) => {\n  const arr = jsLocalStorage.load(arrayType);\n  if (cbfindId(movieId, arr) !== true) {\n    arr.push(movieId);\n    jsLocalStorage.save(arrayType, arr);\n  }\n}; // DOPISUJE do istniejącego array [] movieId\n// musi sprawdzić czy id już istnieje, jeśli istnieje to przerywa działanie funkcji\n// jeśli nie istnieje to robi push..\n\n// funkcja wywoływana przy klikaniu na przyciski w modal (watched albo queued)\nconst removeMovieId = (movieId, arrayType) => {\n  const arr = jsLocalStorage.load(arrayType);\n  if (cbfindId(movieId, arr) === true) {\n    arr.splice(arr.indexOf(movieId), 1);\n    jsLocalStorage.save(arrayType, arr);\n  }\n}; // Jeśli znajdzie, wtedy usuwa ID z array. Jeśli nie znajdzie przerywa działanie\n\n// funkcja wywoływana przy ładowaniu modala, oraz przy kliknięciu na przycisk (po dodaniu do localstorage)\n// w połączeniu z funkcją togglująca klasę w modalu (nie ma jeszcze takiej) służyłaby do zmiany koloru przycisku (jeśli mamy coś - przycisk pomarańczowy, jeśli nie przeźroczysty)\nconst findMovieId = (movieId, arrayType) => {\n  const arr = jsLocalStorage.load(arrayType);\n  return cbfindId(movieId, arr);\n}; // funkcja która tylko i wyłącznie znajduje movie ID i zwraca true albo false\n\nconst localStorageMod = {\n  createLocalStorage,\n  saveMovieId,\n  removeMovieId,\n  findMovieId,\n};\nexport default localStorageMod;\n","const save =(key, value)  => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => localStorage.removeItem(key);\n\nconst jsLocalStorage = { save, load, remove };\n\nexport default jsLocalStorage;\n","export const movieCard = e => {\n    const genres = e.genres.map(genre => genre.name).join(', ');\n    const markup = `<div class=\"movie__card\" data-id=\"${e.id}\">\n   <div class=\"movie__imgbox\">\n     <img class=\"movie__img\" src=\"https://image.tmdb.org/t/p/w500${\n       e.poster_path\n     }\"\n     alt=\"${e.title}\" loading=\"lazy\"/>\n   </div>\n   <p class=\"movie__title\">\n     <b>${e.title}</b>\n   </p>\n   <div class=\"movie__info\">\n     <p class=\"movie__genres\">\n       ${genres.slice(0, 2)}&nbsp;\n     </p>\n     <p class=\"movie__year\">\n       | ${''}\n     </p>\n   </div>\n  </div>\n   `;\n  \n    return markup;\n  };\n  ","// funkcja zamykająca modal\nconst closeModal = () => {\n  const backdrop = document.querySelector('.backdrop');\n  backdrop.remove();\n  // usuwamy klasę blokującą możliwość skrolowania\n  document.body.classList.remove('overflow-off');\n};\n\nexport { closeModal };\n","const renderModal = e => {\n  const genres = e.genres.map(genre => genre.name).join(', ');\n  const markup = `\n    <div class='modal'>\n        <button class='modal__button modal__button--close' id='modal__close'>\n        </button>\n        <img class=\"modal__img\" src=\"https://image.tmdb.org/t/p/w500//${\n          e.poster_path\n        }\" />\n        <div class=\"modal__content\">\n            <h2 class=\"modal__title\">${e.original_title}</h2>\n            <ul class=\"modal__list\">\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Vote / Votes</p>\n                    <div class=\"modal__item--vote\">\n                        <p class=\"modal__item--value modal__item--value--vote\">\n                            <vote_average>\n                                ${e.vote_average.toFixed(1)}\n                            </vote_average>\n                            /\n                            <vote__count>\n                                ${e.vote_count}\n                            </vote__count>\n                        </p>\n                    </div>\n                </li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Popularity</p>\n                    <p class=\"modal__item--value\">${e.popularity.toFixed(1)}</p>\n                </li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Original Title</p>\n                    <p class=\"modal__item--value big\">${e.original_title}</p>\n                </li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Genre</p>\n                    <p class=\"modal__item--value\">${genres}</p>\n                </li>\n            </ul>\n            <div class=\"modal__overview\">\n                <h3 class=\"modal__overview--about\">ABOUT</h3>\n                <p class=\"modal__overview--overview\">${e.overview}</p>\n            </div>\n        <div class=\"modal__buttons\">\n            <button id=\"watched\" class=\"modal__button modal__button--watched watched\">Add to watched</button>\n            <button id=\"queue\" class=\"modal__button modal__button--queue queued\">Add to queue</button>\n        </div>\n    </div>\n    `;\n\n  return markup;\n};\nexport { renderModal };","import { movieID, movieDetails } from './galleryVariables';\nimport apiUtils from '../api/apiUtils';\n\nexport const fetchingMovieDetails = async () => {\n  for (let id of movieID) {\n    try {\n      const response = await fetch(\n        apiUtils.apiUrlStringBuilder(apiUtils.API_ID(id)),\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movieData = await response.json();\n      movieDetails.push(movieData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  console.log(movieDetails);\n};\n","// sposób użycia pierwsze .then(httpCodeHandler) w fetch\nconst httpCodeHandler = response => {\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return response.json();\n};\n\nconst API_MAIN_URL = 'https://api.themoviedb.org/3/';\nconst API_SEARCH = (name = '', pageValue = 1) =>\n  `search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=${pageValue}&include_adult=false`;\nconst API_KEY = '64cb7e9375c055230d64b013c4bca79f';\nconst API_TRENDING = (pageValue = 1) =>\n  `trending/all/day?api_key=${API_KEY}&page=${pageValue}`;\nconst API_ID = id => `movie/${id}?api_key=${API_KEY}`;\n\nconst apiUrlStringBuilder = typeOfQuerry => `${API_MAIN_URL}${typeOfQuerry}`;\n\nconst apiUtils = {\n  httpCodeHandler,\n  API_KEY,\n  API_MAIN_URL,\n  API_SEARCH,\n  API_TRENDING,\n  API_ID,\n  apiUrlStringBuilder,\n};\nexport default apiUtils;\n//przykład użycia\n// console.log(apiUrlStringBuilder(API_TRENDING()));\n// console.log(apiUrlStringBuilder(API_TRENDING(3)));\n// console.log(apiUrlStringBuilder(API_SEARCH('dog')));\n// console.log(apiUrlStringBuilder(API_SEARCH('girl', 4)));\n\n// w innym mogule apiUtils.apiUrlStringBuilder(apiUtils.(API_SEARCH('girl', 4))\n","import { movieDetails, movieBox } from './galleryVariables';\nexport const updatingMovieHTML = () => {\n  let myHTML = '';\n  let genre;\n  let yearOfProduction;\n  movieDetails.forEach(movie => {\n    genre = movie.genres.map(genre => ` ${genre.name}`);\n    yearOfProduction = movie.release_date.substring(0, 4);\n    myHTML += `<div class=\"movie__card\" data-id=\"${movie.id}\">\n      <div class=\"movie__imgbox\">\n        <img class=\"movie__img\" src=\"${\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n            : 'https://movienewsletters.net/photos/000000h1.jpg'\n        }\"\n        alt=\"${movie.title}\" loading=\"lazy\"/>\n      </div>\n      <p class=\"movie__title\">\n        <b>${movie.title}</b>\n      </p>\n      <div class=\"movie__info\">\n        <p class=\"movie__genres\">\n          ${genre.slice(0, 2)}&nbsp;\n        </p>\n        <p class=\"movie__year\">\n          | ${yearOfProduction}\n        </p>\n      </div>\n    </div>`;\n  });\n  movieBox.innerHTML += myHTML;\n};\n// <p style=\"display:none\">${movie.id}<p></p>\n"],"names":["$LjSYC","parcelRequire","$52fcb4eaccae4379$var$isModalOpen","$52fcb4eaccae4379$var$currentScrollY","$52fcb4eaccae4379$export$a7f6cffb6b8ba11c","e","window","scrollY","target","closest","$jPDG0","default","createLocalStorage","backdrop","document","createElement","classList","add","movieId","getAttribute","isWatched","findMovieId","isQueued","fetchMovieById","then","movieData","innerHTML","$lxbfG","renderModal","body","appendChild","$52fcb4eaccae4379$var$handleBodyScrolling","closeModalButton","querySelector","watchedButton","getElementById","queueButton","$52fcb4eaccae4379$var$toLocalButton","addEventListener","removeEventListener","$4uxNo","closeModal","catch","error","Error","$52fcb4eaccae4379$var$clickEscape","button","id","arrayType","isSaved","isLibraryPage","contains","isWatchedPage","isQueuePage","toggle","removeMovieId","remove","movieCardFromHTML","index","$nxuqK","movieID","indexOf","splice","saveMovieId","push","data","movieBox","insertAdjacentHTML","$97FQv","movieCard","watchedBox","queueBox","isModalOpen1","currentScrollY1","style","top","position","console","log","scrollTo","event","keyCode","$08e3d0ca8e461d67$export$6d0761608aa90887","fetch","response","ok","status","json","$046c2079dfc0d523$export$3bb5b193866863e3","$046c2079dfc0d523$export$f4c5de44377d2946","$046c2079dfc0d523$export$a6b01be3fc1f6b1b","$046c2079dfc0d523$export$2e76d997d3465730","$046c2079dfc0d523$export$b7e74a7028f1ab3e","length","$aGWRh","$e7018eadfe1900f9$var$cbfindId","includes","$e7018eadfe1900f9$export$2e2bcd8739ae039","arr1","arr2","localStorage","getItem","save","arr","load","$7c8b7bb1978de214$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","setItem","message","undefined","parse","removeItem","$6a453a32fde890ed$export$b63237b95c76fd1b","genres","map","genre","name","join","poster_path","title","slice","$34542de16e821621$export$3f6fecd573f3fa48","$fad5686dca371532$export$69bf191433722f78","original_title","vote_average","toFixed","vote_count","popularity","overview","$25265715810a26b1$export$a1899bf129d246","async","$bNmRG","apiUrlStringBuilder","API_ID","movieDetails","$896601c93262a9fe$var$API_MAIN_URL","$896601c93262a9fe$var$API_KEY","$896601c93262a9fe$export$2e2bcd8739ae039","pageValue","typeOfQuerry","$33fce9f64abfbf99$export$b3ede83bce5bcc17","genre1","yearOfProduction","myHTML","forEach","movie","release_date","substring"],"version":3,"file":"library.202f7f2a.js.map"}