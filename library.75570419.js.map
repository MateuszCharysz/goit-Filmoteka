{"mappings":"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","sources":["src/js/modal/openModal.js","src/js/api/fetchMovieById.js","src/js/localStorage/localStorage.js","src/js/modal/closeModal.js","src/js/modal/modalMarkup.js","src/js/searchMovies.js","src/js/api/fetchMovies.js","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/@swc/helpers/lib/_define_property.js","src/js/api/fetchMovieGenres.js","src/js/renderListMarkup.js"],"sourcesContent":["import { fetchMovieById } from '../api/fetchMovieById';\nimport { addToLocalStorage } from '../localStorage/localStorage';\nimport { closeModal } from './closeModal';\nimport { renderModal } from './modalMarkup';\n\n// funkcja otwierająca modal\nconst openModal = e => {\n  // przerywa funkcję, jeśli zdarzenie nie występuje na elemencie z klasą \"movie-card\".\n  if (!e.target.closest('.movie__card')) {\n    return;\n  }\n  const backdrop = document.createElement('div');\n  backdrop.classList.add('backdrop');\n\n  // pobranie id filmu z atrybutu \"data-id\" klikniętego elementu\n  const movieId = e.target.closest('.movie__card').getAttribute('data-id');\n  fetchMovieById(movieId)\n    .then(movieData => {\n      backdrop.innerHTML = renderModal(movieData);\n\n      // dodanie elementu backdrop do ciała dokumentu\n      document.body.appendChild(backdrop);\n\n      // blokowanie scrollowania strony\n      const currentScrollY = window.scrollY;\n      document.body.style.top = `-${currentScrollY}px`;\n      document.body.style.position = 'fixed';\n\n      const closeModalButton = document.querySelector('#modal__close');\n      const watchedButton = document.getElementById('watched');\n      const queueButton = document.getElementById('queue');\n\n      watchedButton.addEventListener('click', () =>\n        addToLocalStorage(movieId, 'watched')\n      );\n      queueButton.addEventListener('click', () =>\n        addToLocalStorage(movieId, 'queue')\n      );\n      closeModalButton.addEventListener('click', () => {\n        // usuwanie nasłuchiwaczy zdarzeń\n        watchedButton.removeEventListener('click', () =>\n          addToLocalStorage(movieId, 'watched')\n        );\n        queueButton.removeEventListener(\n          'click',\n          addToLocalStorage(movieId, 'queue')\n        );\n        // odblokowanie scrollowania strony\n        document.body.style.position = '';\n        document.body.style.top = '';\n        window.scrollTo(0, currentScrollY);\n        closeModal();\n      });\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\nexport { openModal };\n","const fetchMovieById = id => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error(\n            'Error: Failed to fetch data from API. Status code:',\n            response.status\n          );\n        }\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      throw new Error(error)\n    });\n};\nexport { fetchMovieById };\n","/*\n    Funkcja addToLocalStorage dodaje identyfikator (id) do listy (listName) \n    przechowywanej w pamięci lokalnej przeglądarki dla zalogowanego użytkownika. \n    Jeśli lista nie istnieje, zostanie utworzona. \n*/\nconst addToLocalStorage = (id, listName) => {\n  let storedList = localStorage.getItem('user');\n  let parsedList = {};\n\n  if (storedList) {\n    parsedList = JSON.parse(storedList);\n  }\n\n  if (!parsedList[listName]) {\n    parsedList[listName] = [];\n  }\n\n  if (!parsedList[listName].includes(id)) {\n    parsedList[listName].push(id);\n  }\n\n  localStorage.setItem('user', JSON.stringify(parsedList));\n};\nexport { addToLocalStorage };\n","// funkcja zamykająca modal\nconst closeModal = () => {\n  const backdrop = document.querySelector('.backdrop');\n  backdrop.remove();\n  // usuwamy klasę blokującą możliwość skrolowania\n  document.body.classList.remove('overflow-off');\n};\n\nexport { closeModal };\n","const renderModal = e => {\n  const genres = e.genres.map(genre => genre.name).join(', ');\n  const markup = `\n    <div class='modal'>\n        <button class='modal__button modal__button--close' id='modal__close'>\n        </button>\n        <img class=\"modal__img\" src=\"https://image.tmdb.org/t/p/w500//${\n          e.poster_path\n        }\" />\n        <div class=\"modal__content\">\n            <h2 class=\"modal__title\">${e.original_title}</h2>\n            <ul class=\"modal__list\">\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Vote / Votes</p>\n                    <div class=\"modal__item--vote\">\n                        <p class=\"modal__item--value modal__item--value--vote\">\n                            <vote_average>\n                                ${e.vote_average.toFixed(1)}\n                            </vote_average>\n                            /\n                            <vote__count>\n                                ${e.vote_count}\n                            </vote__count>\n                        </p>\n                    </div>\n                </li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Popularity</p>\n                    <p class=\"modal__item--value\">${e.popularity.toFixed(1)}</p>\n                </li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Original Title</p>\n                    <p class=\"modal__item--value big\">${e.original_title}</p>\n                </li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label\">Genre</p>\n                    <p class=\"modal__item--value\">${genres}</p>\n                </li>\n            </ul>\n            <div class=\"modal__overview\">\n                <h3 class=\"modal__overview--about\">ABOUT</h3>\n                <p class=\"modal__overview--overview\">${e.overview}</p>\n            </div>\n        <div class=\"modal__buttons\">\n            <button id=\"watched\" class=\"modal__button modal__button--watched\">Add to watched</button>\n            <button id=\"queue\" class=\"modal__button modal__button--queue\">Add to queue</button>\n        </div>\n    </div>\n    `;\n\n  return markup;\n};\nexport { renderModal };","import { fetchMovies } from './api/fetchMovies';\nimport { renderList } from './renderListMarkup';\n\n// Wyszukuje filmy po wpisaniu w wyszukiwarce\n\nconst searchMovies = () => {\n  const searchInput = document.getElementById('search');\n  const searchValue = searchInput.value.trim();\n\n  fetchMovies(searchValue)\n    .then(movies => {\n      const markup = renderList(movies);\n      document.getElementById('main').innerHTML = markup;\n\n      // wywołanie funkcji `openModal` z odpowiednimi argumentami po utworzeniu elementów z wynikami wyszukiwania.\n      const movieCards = document.querySelectorAll('.movie-card');\n      movieCards.forEach(movieCard => {\n        movieCard.addEventListener('click', () => {\n          // Pobierz dane filmu z atrybutów `data-*` klikniętego elementu `.movie-card`.\n          console.log(movieCard);\n        });\n      });\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      // Tutaj możesz wyświetlić informację o błędzie w interfejsie użytkownika\n    });\n};\n\n\nexport { searchMovies };\n","import { fetchMovieGenres } from './fetchMovieGenres';\n\nconst fetchMovies = name => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error(\n            'Error: Failed to fetch data from API. Status code:',\n            response.status\n          );\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .then(data => {\n      const movieIds = data.results.map(movie => movie.id);\n      const promises = movieIds.map(id => fetchMovieGenres(id));\n      return Promise.all(promises).then(genres => {\n        return data.results.map((movie, index) => ({\n          ...movie,\n          genres: genres[index],\n        }));\n      });\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(\n        new Error('An error occurred while fetching the data.')\n      );\n    });\n};\nexport { fetchMovies };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","const fetchMovieGenres = id => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error(\n            'Error: Failed to fetch data from API. Status code:',\n            response.status\n          );\n        }\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(data => {\n      return data.genres;\n    })\n    .catch(error => {\n      throw new Error(error);\n    });\n};\n\nexport { fetchMovieGenres };\n","const renderList = movies => {\n  const markup = movies\n    .map(movie => {\n      const tags = movie.genres.map(genre => genre.name).join(', ');\n      return `<div class=\"movie__card\" data-id=\"${movie.id}\">\n            <img\n              src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\"\n              alt=\"${tags}\"\n              loading=\"lazy\"\n            />\n            <div class=\"info\">\n              <p class=\"movie__title\">${movie.original_title}</p> <p class=\"movie__genres\">${tags}</p>\n            </div>\n          </div>`;\n    })\n    .join('');\n\n  return markup;\n};\nexport { renderList };\n"],"names":["$7yGKT","parcelRequire","$1b5b5aee9508b076$export$a7f6cffb6b8ba11c","e","target","closest","backdrop","document","createElement","classList","add","movieId","getAttribute","fetchMovieById","then","movieData","innerHTML","$e0akk","renderModal","body","appendChild","currentScrollY","window","scrollY","style","top","concat","position","closeModalButton","querySelector","watchedButton","getElementById","queueButton","addEventListener","$8gjq0","addToLocalStorage","removeEventListener","scrollTo","$7O0Ht","closeModal","catch","error","console","$580cdfb29d7abd41$export$6d0761608aa90887","id","API_URL","fetch","response","ok","status","Error","json","$603ee17184359926$export$b4aebac53294aa19","listName","storedList","localStorage","getItem","parsedList","JSON","parse","includes","push","setItem","stringify","$5aedbefb39bcb9b1$export$3f6fecd573f3fa48","remove","$a319137e6235f254$export$69bf191433722f78","genres","map","genre","name","join","poster_path","original_title","vote_average","toFixed","vote_count","popularity","overview","$lfqeF","$e1a441075edf8b92$export$b0c4d3ac9887d994","searchValue","value","trim","fetchMovies","movies","markup","$eskXD","renderList","querySelectorAll","forEach","movieCard","log","$dDDEV","$f77f598278a76b9f$export$88181abcadffafee","Promise","reject","data","promises","results","movie","$iEiy1","fetchMovieGenres","all","index","$parcel$interopDefault","Object","defineProperty","module","exports","default","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","key","$9eddae5a012cde57$var$_defineProperty","obj","__esModule","configurable","writable","$d93a599c3cbe9b01$export$8bebce24411c8fc2","$02b74a130b5b1b93$export$4bf387f59bfc6d67","tags"],"version":3,"file":"library.75570419.js.map"}